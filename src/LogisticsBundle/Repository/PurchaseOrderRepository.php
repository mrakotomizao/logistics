<?php
namespace LogisticsBundle\Repository;

use Doctrine\ORM\AbstractQuery;
use Doctrine\ORM\EntityRepository;

/**
 * PurchaseOrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PurchaseOrderRepository extends EntityRepository
{
    public function getPurchaseOrder($id) {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('po')
            ->from('LogisticsBundle:PurchaseOrder', 'po')
            ->where('po.id = :id')
            ->setParameter('id', $id);

        $queryBuilder->leftJoin('po.orderDetails', 'pod')
            ->addSelect('pod')
            ->leftJoin('po.distributor', 'dis')
            ->addSelect('dis')
            ->leftJoin('pod.catalogItem', 'cat')
            ->addSelect('cat')
            ->leftJoin('pod.inventoryItem', 'inv')
            ->addSelect('inv');

        return $queryBuilder->getQuery()->getSingleResult(AbstractQuery::HYDRATE_OBJECT);

    }

    public function prepareBaseStatement()
    {
        $queryBuilder = $this->getEntityManager()->createQueryBuilder()
            ->select('po')
            ->from('LogisticsBundle:PurchaseOrder', 'po');

        $queryBuilder->leftJoin('po.orderDetails', 'pod')
            ->addSelect('pod')
            ->leftJoin('po.distributor', 'dis')
            ->addSelect('dis')
            ->leftJoin('pod.catalogItem', 'cat')
            ->addSelect('cat')
            ->leftJoin('pod.inventoryItem', 'inv')
            ->addSelect('inv');

        return $queryBuilder;
    }
}
